package Game;

import dbconnection.DBController;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

public class TicTakUI extends javax.swing.JFrame {

    String playmode;
    String user1;
    String user2;
    DBController dbcontroller;
    static char sign = '0';
    public char[][] mat = new char[3][3];

    /**
     * Creates new form TicTakUI
     */
    public TicTakUI(String playmode, String user1, String user2) {
        initComponents();
        this.playmode = playmode;
        this.user1 = user1;
        this.user2 = user2;
        dbcontroller = new DBController();
        setTitle("Tic Tac Toe Game");
        setLocationRelativeTo(null);
        System.out.println(user1 + "   ;;; " + user2);
    }

    public TicTakUI() throws HeadlessException {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TikTakToe");
        setType(java.awt.Window.Type.POPUP);

        btn1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        newGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reload.png"))); // NOI18N
        newGameButton.setText("New Game");
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });

        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop8686.png"))); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ravie", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tictacktoeMedium.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(btn4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newGameButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)
                        .addGap(9, 9, 9)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed

        btn2.setText(getSign() + "");

        btn2.setEnabled(false);
        mat[0][1] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        btn1.setText(getSign() + "");
        btn1.setEnabled(false);
        mat[0][0] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        btn5.setText(getSign() + "");
        btn5.setEnabled(false);
        mat[1][1] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        btn9.setText(getSign() + "");
        btn9.setEnabled(false);
        mat[2][2] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        btn3.setText(getSign() + "");
        btn3.setEnabled(false);
        mat[0][2] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        btn4.setText(getSign() + "");
        btn4.setEnabled(false);
        mat[1][0] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        btn6.setText(getSign() + "");
        btn6.setEnabled(false);
        mat[1][2] = sign;
        checkforwin();
        nextMove();

    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        btn7.setText(getSign() + "");
        btn7.setEnabled(false);
        mat[2][0] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        btn8.setText(getSign() + "");
        btn8.setEnabled(false);
        mat[2][1] = sign;
        checkforwin();
        nextMove();
    }//GEN-LAST:event_btn8ActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        this.setVisible(false);
        TicTakUI newGame = new TicTakUI(playmode, user1, user2);
        newGame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure that you want to exit ?");
        if (showConfirmDialog == 0) {
            System.exit(0);
        }

    }//GEN-LAST:event_exitButtonActionPerformed

    public static char getSign() {         //This will rotate the sign between X and 0
        if (sign == 'X') {
            sign = '0';
        } else if (sign == '0') {
            sign = 'X';
        }

        return sign;
    }

    /*method to find whether a row, column or a diagonal has a winning pattern
     mat[][] array used to check winning pattern*/
    public void checkforwin() {
        int noOfwin = 0;

        if (Main.Findwinner(mat) == '0') {

            try {
                ResultSet rst = dbcontroller.getWinnings(user2);
                if (rst.next()) {
                    noOfwin = rst.getInt("Winnings") + 1;
                    System.out.println(noOfwin);
                    dbcontroller.updateUserStatistics(user2, noOfwin);
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(TicTakUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, (user2 + " has won the match!"), "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
            newGameButtonActionPerformed(null);
        } else if (Main.Findwinner(mat) == 'X') {

            try {
                ResultSet rst = dbcontroller.getWinnings(user1);
                if (rst.next()) {
                    noOfwin = rst.getInt("Winnings") + 1;
                    System.out.println(noOfwin);
                    dbcontroller.updateUserStatistics(user1, noOfwin);
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(TicTakUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, (user1 + " has won the match!"), "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
            newGameButtonActionPerformed(null);
        } else {
            boolean flagMatFull = true;
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (mat[i][j] != '0' && mat[i][j] != 'X') {
                        flagMatFull = false;
                        break;
                    }
                }
                if (flagMatFull == false) {
                    break;
                }

            }
            if (flagMatFull == true) {
                JOptionPane.showMessageDialog(this, ("Match tied!"), "Sorry!", JOptionPane.INFORMATION_MESSAGE);
                newGameButtonActionPerformed(null);
            }

        }
    }

    public void nextMove() {
        if (playmode.equals("singlePlayer")) {
            int nextPosition = Main.getNextStep(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9);
            System.out.println("Position " + nextPosition);
            switch (nextPosition) {
                case 1:

                    btn1.setText(getSign() + "");
                    btn1.setEnabled(false);
                    mat[0][0] = sign;
                    break;
                case 2:
                    btn2.setText(getSign() + "");
                    btn2.setEnabled(false);
                    mat[0][1] = sign;
                    break;
                case 3:
                    btn3.setText(getSign() + "");
                    btn3.setEnabled(false);
                    mat[0][2] = sign;
                    break;
                case 4:
                    btn4.setText(getSign() + "");
                    btn4.setEnabled(false);
                    mat[1][0] = sign;
                    break;
                case 5:
                    btn5.setText(getSign() + "");
                    btn5.setEnabled(false);
                    mat[1][1] = sign;
                    break;
                case 6:
                    btn6.setText(getSign() + "");
                    btn6.setEnabled(false);
                    mat[1][2] = sign;
                    break;
                case 7:
                    btn7.setText(getSign() + "");
                    btn7.setEnabled(false);
                    mat[2][0] = sign;
                    break;
                case 8:
                    btn8.setText(getSign() + "");
                    btn8.setEnabled(false);
                    mat[2][1] = sign;
                    break;
                case 9:
                    btn9.setText(getSign() + "");
                    btn9.setEnabled(false);

                    mat[2][2] = sign;
                    break;
                case 0:
                    randomMove();
                    break;
            }
            checkforwin();
        }
    }

    public void randomMove() {
        int randomX = (int) (Math.random() * 2);
        int randomY = (int) (Math.random() * 2);
        if (mat[randomX][randomY] != '0' && mat[randomX][randomY] != 'X') {
            System.out.println("Random" + randomX + randomY);
            switch (randomX) {
                case 0:
                    switch (randomY) {
                        case 0:
                            btn1.setText(getSign() + "");
                            btn1.setEnabled(false);
                            mat[0][0] = sign;
                            break;
                        case 1:
                            btn2.setText(getSign() + "");
                            btn2.setEnabled(false);
                            mat[0][1] = sign;
                            break;
                        case 2:
                            btn3.setText(getSign() + "");
                            setEnabled(false);
                            mat[0][2] = sign;
                            break;
                    }
                    break;
                case 1:
                    switch (randomY) {
                        case 0:
                            btn4.setText(getSign() + "");
                            btn4.setEnabled(false);
                            mat[1][0] = sign;
                            break;
                        case 1:
                            btn5.setText(getSign() + "");
                            btn5.setEnabled(false);
                            mat[1][1] = sign;
                            break;
                        case 2:
                            btn6.setText(getSign() + "");
                            btn6.setEnabled(false);
                            mat[1][2] = sign;
                            break;
                    }
                    break;
                case 2:
                    switch (randomY) {
                        case 0:
                            btn7.setText(getSign() + "");
                            btn7.setEnabled(false);
                            mat[2][0] = sign;
                            break;
                        case 1:
                            btn8.setText(getSign() + "");
                            btn8.setEnabled(false);
                            mat[2][1] = sign;
                            break;
                        case 2:
                            btn9.setText(getSign() + "");
                            btn9.setEnabled(false);

                            mat[2][2] = sign;
                            break;
                    }
                    break;
            }

        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTakUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTakUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTakUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTakUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTakUI().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn1;
    public javax.swing.JButton btn2;
    public javax.swing.JButton btn3;
    public javax.swing.JButton btn4;
    public javax.swing.JButton btn5;
    public javax.swing.JButton btn6;
    public javax.swing.JButton btn7;
    public javax.swing.JButton btn8;
    public javax.swing.JButton btn9;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton newGameButton;
    // End of variables declaration//GEN-END:variables
}
